
package com.optimaize.anythingworks.exampleproject.clientlib.soap.services.development.exceptionthrower.wsdl;

import com.optimaize.anythingworks.exampleproject.clientlib.soap.commonwsdl.SoapWebServiceException;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebService(name = "SoapExceptionThrower", targetNamespace = "http://exceptionthrower.development.soap.services.server.exampleproject.anythingworks.optimaize.com/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface SoapExceptionThrower {


    /**
     * 
     * @param exceptionType
     * @param exceptionChance
     * @param apiKey
     * @return
     *     returns java.lang.String
     * @throws SoapWebServiceException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "throwException", targetNamespace = "http://exceptionthrower.development.soap.services.server.exampleproject.anythingworks.optimaize.com/", className = "com.optimaize.anythingworks.exampleproject.clientlib.soap.services.development.exceptionthrower.wsdl.ThrowException")
    @ResponseWrapper(localName = "throwExceptionResponse", targetNamespace = "http://exceptionthrower.development.soap.services.server.exampleproject.anythingworks.optimaize.com/", className = "com.optimaize.anythingworks.exampleproject.clientlib.soap.services.development.exceptionthrower.wsdl.ThrowExceptionResponse")
    @Action(input = "http://exceptionthrower.development.soap.services.server.exampleproject.anythingworks.optimaize.com/SoapExceptionThrower/throwExceptionRequest", output = "http://exceptionthrower.development.soap.services.server.exampleproject.anythingworks.optimaize.com/SoapExceptionThrower/throwExceptionResponse", fault = {
        @FaultAction(className = SoapWebServiceException.class, value = "http://exceptionthrower.development.soap.services.server.exampleproject.anythingworks.optimaize.com/SoapExceptionThrower/throwException/Fault/SoapWebServiceException")
    })
    public String throwException(
        @WebParam(name = "apiKey", targetNamespace = "")
        String apiKey,
        @WebParam(name = "exceptionType", targetNamespace = "")
        String exceptionType,
        @WebParam(name = "exceptionChance", targetNamespace = "")
        int exceptionChance)
        throws SoapWebServiceException
    ;

}
